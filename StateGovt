import java.util.Scanner;
import java.sql.*;

public class StateGovts {

	Connection con;
	Statement st;
	ResultSet res;
	PreparedStatement ps;

	 
	StateGovts()
	{
		
	}
	
	public Connection getConnection()
	{
		try{
			 
			
			Class.forName("oracle.jdbc.driver.OracleDriver");
			  // System.out.println("Connecting to database...");
			con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/xe","kavya","root");  
			}
			catch(Exception e){ System.out.println("Error in connection"+e);}
			return con; 

	}
	
	public void insertChief(String name, String qualification, String state,String enddate,String party) {
	try {
			con = getConnection();
		    ps = con.prepareStatement("insert into ChiefMinister values"
		    		+ "(customer_seq.NEXTVAL,?,?,?)");
		    ps.setString(1, name);
		    ps.setString(2, qualification);
		    ps.setString(3, state);
		    ps.setString(4, enddate);
		    ps.setString(5, party);
		   
		    int i = ps.executeUpdate();
		    if (i != 0) {
		        System.out.println("Inserted");
		    } else {
		        System.out.println("not Inserted");
		    }
		    con.close();
		} catch (Exception e) {
		    e.printStackTrace();
		}
		
		
		}
	
	public void getCustomer() 
	{
	  try {
	   con = getConnection();
	   st = con.createStatement();
	   res = st.executeQuery("select * from ChiefMinister order by cid");
	   System.out.println("CustId\t CustomerName\t City\t\t Contact No");
	   System.out.println("-----------------------------------------------------------");
	  while (res.next()) 
	  {
	    System.out.print(res.getInt(1)+"\t");
	    System.out.print(res.getString(2)+"\t\t");
	    System.out.print(res.getString(3)+"\t\t");
	    System.out.println(res.getString(4));
	  }
	  System.out.println("-----------------------------------------------------------");
	  res.close();
	  con.close();
	  } 
	  catch (Exception e) 
	  {
	  System.out.println("Error in fetching data" + e);
	  }
	}
	
	public void updateCustomer(int id,String city) 
	{
		try {
			 con = getConnection();
		    ps = con.prepareStatement("update customer"
		    		+ " set custCity=? where custId=?");
		    ps.setString(1, city);
		    ps.setInt(2,id);
		    int i = ps.executeUpdate();
		    if (i != 0) {
		        System.out.println("City updated");
		    } else {
		        System.out.println("not updated");
		    }
		    con.close();
		} catch (Exception e) {
		    e.printStackTrace();
		}
	}
	
	public void deleteCustomer(int cid) 
	{
		try {
			con = getConnection();
		    ps = con.prepareStatement("delete from customer where custId=?");
		    ps.setInt(1, cid);
		    int i = ps.executeUpdate();
		    if (i != 0) {
		        System.out.println("Customer deleted");
		    } else {
		        System.out.println("Customer Doesn't Exist");
		    }
		    con.close();
		} catch (Exception e) {
		    e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		StateGovts c=new StateGovts();
		String city;
		int cid;
		
		System.out.println("************** State Govt portal**************");
		//System.out.println("----------- Customer Management System ----------");
		while(true)
		{
		System.out.println("Press 1 for New Candidate entry \t Press 2 to Display Candidate details");
		System.out.println("Press 3 for specific display \t Press 4 to Update candidate details");
		System.out.println("Press 5 to delete\t Press 6 to exit"); 
			
		Scanner s=new Scanner(System.in);
		int option=s.nextInt();
		
		switch(option)
		{
		case 1: System.out.println("Enter Candidate name qualification state enddate and party");
		        String name=s.next();
		        String qualification=s.next();
		        String state=s.next();
		        String enddate=s.next();
		        String party=s.next();
			c.insertChief(name,qualification,state,enddate,party);
			break;
		case 2: c.getCustomer();
				break;
		case 3: System.out.println("Enter CustomerId & City to be Updated:");
        		cid=s.nextInt();
        		city=s.next();
			c.updateCustomer(cid,city);
			break;
		case 4: System.out.println("Enter CustomerId  to be Deleted:");
			cid=s.nextInt();
			c.deleteCustomer(cid);
			break;
		case 5: System.out.println("Program Terminated");
		 	System.exit(0);
		
		default: System.out.println("Invalid Selection");
		          break;
		}
		
		
		}
	}

}
